set-option -g default-shell /usr/bin/zsh

# Change the prefix key (screen friendly).
set-option -g prefix C-a
unbind-key C-b
bind-key a send-prefix

# alternate screen allows fullscreen
# programs (vi,less) to clear after exiting
set-window-option -g alternate-screen on

# Bell
set-option -g bell-action any
set-option -g visual-bell off
set-option -g visual-activity off
set-option -g visual-content off
set-option -g visual-silence off

# Use VI bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Don't use the mouse
set-window-option -g mode-mouse off
set-option -g mouse-select-pane off

set-option -g default-terminal "screen-256color"
set-window-option -g utf8 on

# Window/Pane management
unbind %
unbind '"'
bind-key | split-window -h
bind-key _ split-window -v
bind-key "'" last-window

bind-key H choose-window "join-pane -hs '%%'"
bind-key V choose-window "join-pane -vs '%%'"
bind-key C-w select-pane -t :.+
bind-key P set-window-option synchronize-panes
bind-key m set-window-option monitor-activity
bind-key M command-prompt -p "Monitor for content:" "set-window-option monitor-content '%%'"
unbind r # was refresh-client
bind-key C-l refresh-client
bind-key r command-prompt "rename-window '%%'"
bind-key R command-prompt "rename-session '%%'"
unbind Up
unbind Down
unbind Left
unbind Right
bind-key -r Up resize-pane -U
bind-key -r Down resize-pane -D
bind-key -r Left resize-pane -L
bind-key -r Right resize-pane -R
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key "/" command-prompt "find-window '%%'"
set-option -g pane-active-border-fg colour21
set-option -g pane-border-fg colour166

# cwd is the directory from which tmux was started
set-option -g default-path "."

# Copy into x clipboard
bind-key C-c run "tmux setenv -g $(tmux showenv DISPLAY | tr '=' ' '); tmux save-buffer /tmp/clip; cat /tmp/clip | xclip -i -selection clipboard"
bind-key C-v run "tmux setenv -g $(tmux showenv DISPLAY | tr '=' ' '); tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# Smarter copy into terminal's clipboard
# http://sunaku.github.io/tmux-yank-osc52.html
bind-key -t vi-copy y copy-pipe 'yank > #{pane_tty}'
bind-key y choose-buffer 'run-shell "tmux save-buffer -b \"%%\" - | yank > #{pane_tty}"'

# Sessions
# Fuzzy session search
bind-key s new-window "tmux list-sessions -F \"#{session_name}\" | ~/.fzf/bin/fzf | xargs tmux switch-client -t"
# Jump to previous
bind-key '"' switch-client -l

# scrollback buffer n lines
set -g history-limit 10000

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# wm window title string (uses statusbar variables)
set -g set-titles on
set -g set-titles-string "#S:#I.#P  #W"

# For some reason this messes with evil-mode in emacs?
# https://bitbucket.org/lyro/evil/issues/69/delay-between-esc-or-c-and-modeswitch
set -s escape-time 0

# -----------------------------------
# ----       Status Bar          ----
# -----------------------------------

# Show messages and notifications for 3 seconds.
set-option -g display-time 3000

# Refresh the status bar every 10 second.
set-option -g status-interval 10

# The status bar itself.
set-option -g status-left '#{?client_prefix,#[reverse],}#[fg=colour129][#S]'
set-option -g status-left-length 25
# Date, Time, and load on the right of the status
set-option -g status-right '#[fg=colour166][#(cut -d" " -f1,2,3 /proc/loadavg)#[fg=colour33](#(cat /proc/cpuinfo | grep processor | wc -l ))#[fg=colour166]] #[fg=colour129]%a %Y/%m/%d %H:%M[#(date -u +%%H:%%M)]'
set-option -g status-right-length 60

# default statusbar colors
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour166
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
set-window-option -g window-status-format '#I.#P #W#F'

# active window title colors
set-window-option -g window-status-current-fg colour33
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format '#I.#P #W#F'

# alerted window colors
set-window-option -g window-status-bell-fg colour33
set-window-option -g window-status-bell-bg black

# command/message line colors
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright

set-option -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SESSION_MANAGER TMUX_SESSION"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# C-j and C-k interfere with FZF and others
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
