set-option -g prefix C-Space
unbind-key C-b
bind-key Space send-prefix
bind-key C-Space kill-session -C

# alternate screen allows fullscreen
# programs (vi,less) to clear after exiting
set-window-option -g alternate-screen on

# Bell
set-option -g bell-action any
set-option -g visual-bell off
set-option -g visual-activity off
set-option -g visual-silence off

# Use VI bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

set-window-option -g mouse off

# Reload config
bind-key C-r source ~/.tmux.conf

set-option -g default-terminal "xterm-256color"

# Window/Pane management
unbind %
unbind '"'
bind-key | split-window -h
bind-key _ split-window -v
bind-key "'" last-window
bind-key H choose-window "join-pane -hs '%%'"
bind-key V choose-window "join-pane -vs '%%'"
bind-key C move-window -r # Renumber windows without gaps
bind-key > run-shell tmux_side_pane
bind-key < run-shell "tmux_side_pane left"

bind-key m set-window-option monitor-activity
bind-key r command-prompt "rename-window '%%'"
bind-key R command-prompt "rename-session '%%'"
bind-key -r Up resize-pane -U
bind-key -r Down resize-pane -D
bind-key -r Left resize-pane -L
bind-key -r Right resize-pane -R
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window
set-option -g pane-active-border-fg colour21
set-option -g pane-border-fg colour166

# Smarter copy into terminal's clipboard
# http://sunaku.github.io/tmux-yank-osc52.html
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'yank > #{pane_tty}'
bind-key y choose-buffer 'run-shell "tmux save-buffer -b \"%%\" - | yank > #{pane_tty}"'

# Sessions
# Fuzzy session search
bind-key s new-window "session_finder"
bind-key P new-window "project"
# Jump to previous
bind-key '"' switch-client -l
# Create new session
bind-key S command-prompt "new-session -s '%%' -A"
# Create or join session editing dotfiles
bind-key D new-window "cd ~/.dotfiles; session_finder dotfiles"
# Use sessions '0' as a catch-all
bind-key C-s new-window "cd ~; session_finder 0"
# Pick a recent session when ending this one
set-option -g detach-on-destroy off

# scrollback buffer n lines
set -g history-limit 10000

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# wm window title string (uses statusbar variables)
set -g set-titles on
set -g set-titles-string "#S:#I.#P  #W"

# For some reason this messes with evil-mode in emacs?
# https://bitbucket.org/lyro/evil/issues/69/delay-between-esc-or-c-and-modeswitch
set -s escape-time 0

# -----------------------------------
# ----       Status Bar          ----
# -----------------------------------

# Show messages and notifications for 3 seconds.
set-option -g display-time 3000

# Refresh the status bar every 2 seconds.
set-option -g status-interval 2

# The status bar itself.
set-option -g status-left '#{?client_prefix,#[reverse],}#[fg=colour129][#S]'
set-option -g status-left-length 25
# Date, Time, and load on the right of the status
set-option -g status-right '#(tmux_session_bells)#[fg=colour166][#(load)#[fg=colour33](#(count_cores))#[fg=colour166]] #[fg=colour129]%a %Y/%m/%d %H:%M'
set-option -g status-right-length 60

# default statusbar colors
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour166
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
set-window-option -g window-status-format '#I.#P #W#F'

# active window title colors
set-window-option -g window-status-current-fg colour33
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format '#I.#P #W#F'

# alerted window colors
set-window-option -g window-status-bell-fg colour33
set-window-option -g window-status-bell-bg black

# command/message line colors
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright

set-option -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SESSION_MANAGER TMUX_SESSION"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Let vim know when to pick up file changes
set-option -g focus-events on

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run '~/.tmux/plugins/tpm/tpm'
